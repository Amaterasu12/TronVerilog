|tron
CLOCK_50 => CLOCK_50.IN12
KEY[0] => resetn.IN6
KEY[1] => KEY[1].IN2
KEY[2] => KEY[2].IN2
KEY[3] => KEY[3].IN1
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
LEDR[0] << colQ.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] << <GND>
LEDR[2] << <GND>
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << present[0].DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] << present[1].DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] << present[2].DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] << present[3].DB_MAX_OUTPUT_PORT_TYPE
LEDR[9] << present[4].DB_MAX_OUTPUT_PORT_TYPE
PS2_DAT <> PS2_Demo:ps2.port3
PS2_CLK <> PS2_Demo:ps2.port2
HEX5[6] << hexDecoder:h5.port1
HEX5[5] << hexDecoder:h5.port1
HEX5[4] << hexDecoder:h5.port1
HEX5[3] << hexDecoder:h5.port1
HEX5[2] << hexDecoder:h5.port1
HEX5[1] << hexDecoder:h5.port1
HEX5[0] << hexDecoder:h5.port1
HEX4[6] << hexDecoder:h4.port1
HEX4[5] << hexDecoder:h4.port1
HEX4[4] << hexDecoder:h4.port1
HEX4[3] << hexDecoder:h4.port1
HEX4[2] << hexDecoder:h4.port1
HEX4[1] << hexDecoder:h4.port1
HEX4[0] << hexDecoder:h4.port1
HEX1[6] << hexDecoder:h1.port1
HEX1[5] << hexDecoder:h1.port1
HEX1[4] << hexDecoder:h1.port1
HEX1[3] << hexDecoder:h1.port1
HEX1[2] << hexDecoder:h1.port1
HEX1[1] << hexDecoder:h1.port1
HEX1[0] << hexDecoder:h1.port1
HEX0[6] << hexDecoder:h0.port1
HEX0[5] << hexDecoder:h0.port1
HEX0[4] << hexDecoder:h0.port1
HEX0[3] << hexDecoder:h0.port1
HEX0[2] << hexDecoder:h0.port1
HEX0[1] << hexDecoder:h0.port1
HEX0[0] << hexDecoder:h0.port1
VGA_CLK << vga_adapter:VGA.VGA_CLK
VGA_HS << vga_adapter:VGA.VGA_HS
VGA_VS << vga_adapter:VGA.VGA_VS
VGA_BLANK_N << vga_adapter:VGA.VGA_BLANK
VGA_SYNC_N << vga_adapter:VGA.VGA_SYNC
VGA_R[0] << vga_adapter:VGA.VGA_R
VGA_R[1] << vga_adapter:VGA.VGA_R
VGA_R[2] << vga_adapter:VGA.VGA_R
VGA_R[3] << vga_adapter:VGA.VGA_R
VGA_R[4] << vga_adapter:VGA.VGA_R
VGA_R[5] << vga_adapter:VGA.VGA_R
VGA_R[6] << vga_adapter:VGA.VGA_R
VGA_R[7] << vga_adapter:VGA.VGA_R
VGA_R[8] << vga_adapter:VGA.VGA_R
VGA_R[9] << vga_adapter:VGA.VGA_R
VGA_G[0] << vga_adapter:VGA.VGA_G
VGA_G[1] << vga_adapter:VGA.VGA_G
VGA_G[2] << vga_adapter:VGA.VGA_G
VGA_G[3] << vga_adapter:VGA.VGA_G
VGA_G[4] << vga_adapter:VGA.VGA_G
VGA_G[5] << vga_adapter:VGA.VGA_G
VGA_G[6] << vga_adapter:VGA.VGA_G
VGA_G[7] << vga_adapter:VGA.VGA_G
VGA_G[8] << vga_adapter:VGA.VGA_G
VGA_G[9] << vga_adapter:VGA.VGA_G
VGA_B[0] << vga_adapter:VGA.VGA_B
VGA_B[1] << vga_adapter:VGA.VGA_B
VGA_B[2] << vga_adapter:VGA.VGA_B
VGA_B[3] << vga_adapter:VGA.VGA_B
VGA_B[4] << vga_adapter:VGA.VGA_B
VGA_B[5] << vga_adapter:VGA.VGA_B
VGA_B[6] << vga_adapter:VGA.VGA_B
VGA_B[7] << vga_adapter:VGA.VGA_B
VGA_B[8] << vga_adapter:VGA.VGA_B
VGA_B[9] << vga_adapter:VGA.VGA_B


|tron|vga_adapter:VGA
resetn => resetn.IN1
clock => clock.IN2
colour[0] => colour[0].IN1
colour[1] => colour[1].IN1
colour[2] => colour[2].IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
x[2] => x[2].IN1
x[3] => x[3].IN1
x[4] => x[4].IN1
x[5] => x[5].IN1
x[6] => x[6].IN1
x[7] => x[7].IN1
y[0] => y[0].IN1
y[1] => y[1].IN1
y[2] => y[2].IN1
y[3] => y[3].IN1
y[4] => y[4].IN1
y[5] => y[5].IN1
y[6] => y[6].IN1
plot => writeEn.IN1
VGA_R[0] <= vga_controller:controller.VGA_R
VGA_R[1] <= vga_controller:controller.VGA_R
VGA_R[2] <= vga_controller:controller.VGA_R
VGA_R[3] <= vga_controller:controller.VGA_R
VGA_R[4] <= vga_controller:controller.VGA_R
VGA_R[5] <= vga_controller:controller.VGA_R
VGA_R[6] <= vga_controller:controller.VGA_R
VGA_R[7] <= vga_controller:controller.VGA_R
VGA_R[8] <= vga_controller:controller.VGA_R
VGA_R[9] <= vga_controller:controller.VGA_R
VGA_G[0] <= vga_controller:controller.VGA_G
VGA_G[1] <= vga_controller:controller.VGA_G
VGA_G[2] <= vga_controller:controller.VGA_G
VGA_G[3] <= vga_controller:controller.VGA_G
VGA_G[4] <= vga_controller:controller.VGA_G
VGA_G[5] <= vga_controller:controller.VGA_G
VGA_G[6] <= vga_controller:controller.VGA_G
VGA_G[7] <= vga_controller:controller.VGA_G
VGA_G[8] <= vga_controller:controller.VGA_G
VGA_G[9] <= vga_controller:controller.VGA_G
VGA_B[0] <= vga_controller:controller.VGA_B
VGA_B[1] <= vga_controller:controller.VGA_B
VGA_B[2] <= vga_controller:controller.VGA_B
VGA_B[3] <= vga_controller:controller.VGA_B
VGA_B[4] <= vga_controller:controller.VGA_B
VGA_B[5] <= vga_controller:controller.VGA_B
VGA_B[6] <= vga_controller:controller.VGA_B
VGA_B[7] <= vga_controller:controller.VGA_B
VGA_B[8] <= vga_controller:controller.VGA_B
VGA_B[9] <= vga_controller:controller.VGA_B
VGA_HS <= vga_controller:controller.VGA_HS
VGA_VS <= vga_controller:controller.VGA_VS
VGA_BLANK <= vga_controller:controller.VGA_BLANK
VGA_SYNC <= vga_controller:controller.VGA_SYNC
VGA_CLK <= vga_controller:controller.VGA_CLK


|tron|vga_adapter:VGA|vga_address_translator:user_input_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|tron|vga_adapter:VGA|altsyncram:VideoMemory
wren_a => altsyncram_e6n1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_e6n1:auto_generated.data_a[0]
data_a[1] => altsyncram_e6n1:auto_generated.data_a[1]
data_a[2] => altsyncram_e6n1:auto_generated.data_a[2]
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
address_a[0] => altsyncram_e6n1:auto_generated.address_a[0]
address_a[1] => altsyncram_e6n1:auto_generated.address_a[1]
address_a[2] => altsyncram_e6n1:auto_generated.address_a[2]
address_a[3] => altsyncram_e6n1:auto_generated.address_a[3]
address_a[4] => altsyncram_e6n1:auto_generated.address_a[4]
address_a[5] => altsyncram_e6n1:auto_generated.address_a[5]
address_a[6] => altsyncram_e6n1:auto_generated.address_a[6]
address_a[7] => altsyncram_e6n1:auto_generated.address_a[7]
address_a[8] => altsyncram_e6n1:auto_generated.address_a[8]
address_a[9] => altsyncram_e6n1:auto_generated.address_a[9]
address_a[10] => altsyncram_e6n1:auto_generated.address_a[10]
address_a[11] => altsyncram_e6n1:auto_generated.address_a[11]
address_a[12] => altsyncram_e6n1:auto_generated.address_a[12]
address_a[13] => altsyncram_e6n1:auto_generated.address_a[13]
address_a[14] => altsyncram_e6n1:auto_generated.address_a[14]
address_b[0] => altsyncram_e6n1:auto_generated.address_b[0]
address_b[1] => altsyncram_e6n1:auto_generated.address_b[1]
address_b[2] => altsyncram_e6n1:auto_generated.address_b[2]
address_b[3] => altsyncram_e6n1:auto_generated.address_b[3]
address_b[4] => altsyncram_e6n1:auto_generated.address_b[4]
address_b[5] => altsyncram_e6n1:auto_generated.address_b[5]
address_b[6] => altsyncram_e6n1:auto_generated.address_b[6]
address_b[7] => altsyncram_e6n1:auto_generated.address_b[7]
address_b[8] => altsyncram_e6n1:auto_generated.address_b[8]
address_b[9] => altsyncram_e6n1:auto_generated.address_b[9]
address_b[10] => altsyncram_e6n1:auto_generated.address_b[10]
address_b[11] => altsyncram_e6n1:auto_generated.address_b[11]
address_b[12] => altsyncram_e6n1:auto_generated.address_b[12]
address_b[13] => altsyncram_e6n1:auto_generated.address_b[13]
address_b[14] => altsyncram_e6n1:auto_generated.address_b[14]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_e6n1:auto_generated.clock0
clock1 => altsyncram_e6n1:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_a[1] <= <GND>
q_a[2] <= <GND>
q_b[0] <= altsyncram_e6n1:auto_generated.q_b[0]
q_b[1] <= altsyncram_e6n1:auto_generated.q_b[1]
q_b[2] <= altsyncram_e6n1:auto_generated.q_b[2]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|tron|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_e6n1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[12] => ram_block1a2.PORTAADDR12
address_a[12] => ram_block1a3.PORTAADDR12
address_a[12] => ram_block1a4.PORTAADDR12
address_a[12] => ram_block1a5.PORTAADDR12
address_a[13] => decode_7la:decode2.data[0]
address_a[13] => decode_7la:wren_decode_a.data[0]
address_a[14] => decode_7la:decode2.data[1]
address_a[14] => decode_7la:wren_decode_a.data[1]
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[0] => ram_block1a6.PORTBADDR
address_b[0] => ram_block1a7.PORTBADDR
address_b[0] => ram_block1a8.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[1] => ram_block1a6.PORTBADDR1
address_b[1] => ram_block1a7.PORTBADDR1
address_b[1] => ram_block1a8.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[2] => ram_block1a6.PORTBADDR2
address_b[2] => ram_block1a7.PORTBADDR2
address_b[2] => ram_block1a8.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[3] => ram_block1a6.PORTBADDR3
address_b[3] => ram_block1a7.PORTBADDR3
address_b[3] => ram_block1a8.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[4] => ram_block1a6.PORTBADDR4
address_b[4] => ram_block1a7.PORTBADDR4
address_b[4] => ram_block1a8.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[5] => ram_block1a6.PORTBADDR5
address_b[5] => ram_block1a7.PORTBADDR5
address_b[5] => ram_block1a8.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[6] => ram_block1a1.PORTBADDR6
address_b[6] => ram_block1a2.PORTBADDR6
address_b[6] => ram_block1a3.PORTBADDR6
address_b[6] => ram_block1a4.PORTBADDR6
address_b[6] => ram_block1a5.PORTBADDR6
address_b[6] => ram_block1a6.PORTBADDR6
address_b[6] => ram_block1a7.PORTBADDR6
address_b[6] => ram_block1a8.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[7] => ram_block1a1.PORTBADDR7
address_b[7] => ram_block1a2.PORTBADDR7
address_b[7] => ram_block1a3.PORTBADDR7
address_b[7] => ram_block1a4.PORTBADDR7
address_b[7] => ram_block1a5.PORTBADDR7
address_b[7] => ram_block1a6.PORTBADDR7
address_b[7] => ram_block1a7.PORTBADDR7
address_b[7] => ram_block1a8.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
address_b[8] => ram_block1a1.PORTBADDR8
address_b[8] => ram_block1a2.PORTBADDR8
address_b[8] => ram_block1a3.PORTBADDR8
address_b[8] => ram_block1a4.PORTBADDR8
address_b[8] => ram_block1a5.PORTBADDR8
address_b[8] => ram_block1a6.PORTBADDR8
address_b[8] => ram_block1a7.PORTBADDR8
address_b[8] => ram_block1a8.PORTBADDR8
address_b[9] => ram_block1a0.PORTBADDR9
address_b[9] => ram_block1a1.PORTBADDR9
address_b[9] => ram_block1a2.PORTBADDR9
address_b[9] => ram_block1a3.PORTBADDR9
address_b[9] => ram_block1a4.PORTBADDR9
address_b[9] => ram_block1a5.PORTBADDR9
address_b[9] => ram_block1a6.PORTBADDR9
address_b[9] => ram_block1a7.PORTBADDR9
address_b[9] => ram_block1a8.PORTBADDR9
address_b[10] => ram_block1a0.PORTBADDR10
address_b[10] => ram_block1a1.PORTBADDR10
address_b[10] => ram_block1a2.PORTBADDR10
address_b[10] => ram_block1a3.PORTBADDR10
address_b[10] => ram_block1a4.PORTBADDR10
address_b[10] => ram_block1a5.PORTBADDR10
address_b[10] => ram_block1a6.PORTBADDR10
address_b[10] => ram_block1a7.PORTBADDR10
address_b[10] => ram_block1a8.PORTBADDR10
address_b[11] => ram_block1a0.PORTBADDR11
address_b[11] => ram_block1a1.PORTBADDR11
address_b[11] => ram_block1a2.PORTBADDR11
address_b[11] => ram_block1a3.PORTBADDR11
address_b[11] => ram_block1a4.PORTBADDR11
address_b[11] => ram_block1a5.PORTBADDR11
address_b[11] => ram_block1a6.PORTBADDR11
address_b[11] => ram_block1a7.PORTBADDR11
address_b[11] => ram_block1a8.PORTBADDR11
address_b[12] => ram_block1a0.PORTBADDR12
address_b[12] => ram_block1a1.PORTBADDR12
address_b[12] => ram_block1a2.PORTBADDR12
address_b[12] => ram_block1a3.PORTBADDR12
address_b[12] => ram_block1a4.PORTBADDR12
address_b[12] => ram_block1a5.PORTBADDR12
address_b[13] => address_reg_b[0].DATAIN
address_b[13] => decode_01a:rden_decode_b.data[0]
address_b[14] => address_reg_b[1].DATAIN
address_b[14] => decode_01a:rden_decode_b.data[1]
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
clock1 => ram_block1a6.CLK1
clock1 => ram_block1a7.CLK1
clock1 => ram_block1a8.CLK1
clock1 => address_reg_b[1].CLK
clock1 => address_reg_b[0].CLK
clock1 => out_address_reg_b[1].CLK
clock1 => out_address_reg_b[0].CLK
data_a[0] => ram_block1a0.PORTADATAIN
data_a[0] => ram_block1a3.PORTADATAIN
data_a[0] => ram_block1a6.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[1] => ram_block1a4.PORTADATAIN
data_a[1] => ram_block1a7.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[2] => ram_block1a5.PORTADATAIN
data_a[2] => ram_block1a8.PORTADATAIN
q_b[0] <= mux_ifb:mux3.result[0]
q_b[1] <= mux_ifb:mux3.result[1]
q_b[2] <= mux_ifb:mux3.result[2]
wren_a => decode_7la:decode2.enable
wren_a => decode_7la:wren_decode_a.enable


|tron|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_e6n1:auto_generated|decode_7la:decode2
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|tron|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_e6n1:auto_generated|decode_01a:rden_decode_b
data[0] => w_anode143w[1].IN0
data[0] => w_anode157w[1].IN1
data[0] => w_anode166w[1].IN0
data[0] => w_anode175w[1].IN1
data[1] => w_anode143w[2].IN0
data[1] => w_anode157w[2].IN0
data[1] => w_anode166w[2].IN1
data[1] => w_anode175w[2].IN1
eq[0] <= w_anode143w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode157w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode166w[2].DB_MAX_OUTPUT_PORT_TYPE


|tron|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_e6n1:auto_generated|decode_7la:wren_decode_a
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|tron|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_e6n1:auto_generated|mux_ifb:mux3
data[0] => data0_wire[0].IN0
data[1] => data0_wire[1].IN0
data[2] => data0_wire[2].IN0
data[3] => data1_wire[0].IN0
data[4] => data1_wire[1].IN0
data[5] => data1_wire[2].IN0
data[6] => data2_wire[0].IN0
data[7] => data2_wire[1].IN0
data[8] => data2_wire[2].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[2].IN0
sel[0] => data1_wire[2].IN1
sel[0] => data1_wire[1].IN1
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[2].IN1
sel[1] => data2_wire[1].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|tron|vga_adapter:VGA|vga_pll:mypll
clock_in => clock_input_bus[0].IN1
clock_out <= altpll:altpll_component.clk


|tron|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component
inclk[0] => altpll_80u:auto_generated.inclk[0]
inclk[1] => altpll_80u:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
clk[5] <= clk[5].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|tron|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component|altpll_80u:auto_generated
clk[0] <= generic_pll1.O_OUTCLK
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
fbout <= generic_pll1.O_FBOUTCLK
inclk[0] => generic_pll1.I_REFCLK
inclk[1] => ~NO_FANOUT~
locked <= generic_pll1.LOCKED


|tron|vga_adapter:VGA|vga_controller:controller
vga_clock => VGA_BLANK~reg0.CLK
vga_clock => VGA_VS~reg0.CLK
vga_clock => VGA_HS~reg0.CLK
vga_clock => VGA_BLANK1.CLK
vga_clock => VGA_VS1.CLK
vga_clock => VGA_HS1.CLK
vga_clock => yCounter[0].CLK
vga_clock => yCounter[1].CLK
vga_clock => yCounter[2].CLK
vga_clock => yCounter[3].CLK
vga_clock => yCounter[4].CLK
vga_clock => yCounter[5].CLK
vga_clock => yCounter[6].CLK
vga_clock => yCounter[7].CLK
vga_clock => yCounter[8].CLK
vga_clock => yCounter[9].CLK
vga_clock => xCounter[0].CLK
vga_clock => xCounter[1].CLK
vga_clock => xCounter[2].CLK
vga_clock => xCounter[3].CLK
vga_clock => xCounter[4].CLK
vga_clock => xCounter[5].CLK
vga_clock => xCounter[6].CLK
vga_clock => xCounter[7].CLK
vga_clock => xCounter[8].CLK
vga_clock => xCounter[9].CLK
vga_clock => VGA_CLK.DATAIN
resetn => xCounter[0].ACLR
resetn => xCounter[1].ACLR
resetn => xCounter[2].ACLR
resetn => xCounter[3].ACLR
resetn => xCounter[4].ACLR
resetn => xCounter[5].ACLR
resetn => xCounter[6].ACLR
resetn => xCounter[7].ACLR
resetn => xCounter[8].ACLR
resetn => xCounter[9].ACLR
resetn => yCounter[0].ACLR
resetn => yCounter[1].ACLR
resetn => yCounter[2].ACLR
resetn => yCounter[3].ACLR
resetn => yCounter[4].ACLR
resetn => yCounter[5].ACLR
resetn => yCounter[6].ACLR
resetn => yCounter[7].ACLR
resetn => yCounter[8].ACLR
resetn => yCounter[9].ACLR
pixel_colour[0] => VGA_B[0].DATAIN
pixel_colour[0] => VGA_B[9].DATAIN
pixel_colour[0] => VGA_B[8].DATAIN
pixel_colour[0] => VGA_B[7].DATAIN
pixel_colour[0] => VGA_B[6].DATAIN
pixel_colour[0] => VGA_B[5].DATAIN
pixel_colour[0] => VGA_B[4].DATAIN
pixel_colour[0] => VGA_B[3].DATAIN
pixel_colour[0] => VGA_B[2].DATAIN
pixel_colour[0] => VGA_B[1].DATAIN
pixel_colour[1] => VGA_G[0].DATAIN
pixel_colour[1] => VGA_G[9].DATAIN
pixel_colour[1] => VGA_G[8].DATAIN
pixel_colour[1] => VGA_G[7].DATAIN
pixel_colour[1] => VGA_G[6].DATAIN
pixel_colour[1] => VGA_G[5].DATAIN
pixel_colour[1] => VGA_G[4].DATAIN
pixel_colour[1] => VGA_G[3].DATAIN
pixel_colour[1] => VGA_G[2].DATAIN
pixel_colour[1] => VGA_G[1].DATAIN
pixel_colour[2] => VGA_R[0].DATAIN
pixel_colour[2] => VGA_R[9].DATAIN
pixel_colour[2] => VGA_R[8].DATAIN
pixel_colour[2] => VGA_R[7].DATAIN
pixel_colour[2] => VGA_R[6].DATAIN
pixel_colour[2] => VGA_R[5].DATAIN
pixel_colour[2] => VGA_R[4].DATAIN
pixel_colour[2] => VGA_R[3].DATAIN
pixel_colour[2] => VGA_R[2].DATAIN
pixel_colour[2] => VGA_R[1].DATAIN
memory_address[0] <= vga_address_translator:controller_translator.mem_address
memory_address[1] <= vga_address_translator:controller_translator.mem_address
memory_address[2] <= vga_address_translator:controller_translator.mem_address
memory_address[3] <= vga_address_translator:controller_translator.mem_address
memory_address[4] <= vga_address_translator:controller_translator.mem_address
memory_address[5] <= vga_address_translator:controller_translator.mem_address
memory_address[6] <= vga_address_translator:controller_translator.mem_address
memory_address[7] <= vga_address_translator:controller_translator.mem_address
memory_address[8] <= vga_address_translator:controller_translator.mem_address
memory_address[9] <= vga_address_translator:controller_translator.mem_address
memory_address[10] <= vga_address_translator:controller_translator.mem_address
memory_address[11] <= vga_address_translator:controller_translator.mem_address
memory_address[12] <= vga_address_translator:controller_translator.mem_address
memory_address[13] <= vga_address_translator:controller_translator.mem_address
memory_address[14] <= vga_address_translator:controller_translator.mem_address
VGA_R[0] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[1] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[2] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[3] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[4] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[5] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[6] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[7] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[8] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[9] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[0] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[1] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[2] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[3] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[4] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[5] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[6] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[7] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[8] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[9] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[0] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[1] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[2] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[3] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[4] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[5] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[6] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[7] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[8] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[9] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_HS <= VGA_HS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_VS <= VGA_VS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_BLANK <= VGA_BLANK~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_SYNC <= <VCC>
VGA_CLK <= vga_clock.DB_MAX_OUTPUT_PORT_TYPE


|tron|vga_adapter:VGA|vga_controller:controller|vga_address_translator:controller_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|tron|directionControl:c1
clock => ~NO_FANOUT~
switch[0] => Decoder0.IN7
switch[1] => Decoder0.IN6
switch[2] => Decoder0.IN5
switch[3] => Decoder0.IN4
switch[4] => Decoder0.IN3
switch[5] => Decoder0.IN2
switch[6] => Decoder0.IN1
switch[7] => Decoder0.IN0
move[0] <= move.DB_MAX_OUTPUT_PORT_TYPE
move[1] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
move[2] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
move[3] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
move[4] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE


|tron|controlPath:p1
reset => ~NO_FANOUT~
play => present.OUTPUTSELECT
play => present.OUTPUTSELECT
play => present.OUTPUTSELECT
play => present.OUTPUTSELECT
play => present.OUTPUTSELECT
move1[0] => Equal1.IN0
move1[0] => Equal2.IN5
move1[0] => Equal3.IN5
move1[0] => Equal4.IN5
move1[0] => Equal5.IN1
move1[0] => Equal6.IN5
move1[0] => Equal7.IN5
move1[0] => Equal8.IN5
move1[1] => Equal1.IN5
move1[1] => Equal2.IN0
move1[1] => Equal3.IN4
move1[1] => Equal4.IN4
move1[1] => Equal5.IN0
move1[1] => Equal6.IN1
move1[1] => Equal7.IN4
move1[1] => Equal8.IN4
move1[2] => Equal1.IN4
move1[2] => Equal2.IN4
move1[2] => Equal3.IN0
move1[2] => Equal4.IN3
move1[2] => Equal5.IN5
move1[2] => Equal6.IN0
move1[2] => Equal7.IN1
move1[2] => Equal8.IN3
move1[3] => Equal1.IN3
move1[3] => Equal2.IN3
move1[3] => Equal3.IN3
move1[3] => Equal4.IN0
move1[3] => Equal5.IN4
move1[3] => Equal6.IN4
move1[3] => Equal7.IN0
move1[3] => Equal8.IN1
move1[4] => Equal1.IN2
move1[4] => Equal2.IN2
move1[4] => Equal3.IN2
move1[4] => Equal4.IN2
move1[4] => Equal5.IN3
move1[4] => Equal6.IN3
move1[4] => Equal7.IN3
move1[4] => Equal8.IN0
clock => player2~1.DATAIN
clock => player1~1.DATAIN
clock => next~9.DATAIN
present[0] <= present[0].DB_MAX_OUTPUT_PORT_TYPE
present[1] <= present.DB_MAX_OUTPUT_PORT_TYPE
present[2] <= present.DB_MAX_OUTPUT_PORT_TYPE
present[3] <= present.DB_MAX_OUTPUT_PORT_TYPE
present[4] <= present.DB_MAX_OUTPUT_PORT_TYPE
winner[0] => Equal9.IN1
winner[1] => Equal9.IN0


|tron|dataPath:p2
present[0] => Decoder0.IN4
present[0] => Mux0.IN10
present[0] => Mux1.IN10
present[0] => Mux2.IN10
present[0] => Mux3.IN10
present[0] => Mux4.IN10
present[0] => Mux5.IN10
present[0] => Mux6.IN10
present[0] => Mux7.IN10
present[0] => Mux8.IN10
present[0] => Mux9.IN10
present[0] => Mux10.IN10
present[0] => Mux11.IN10
present[0] => Mux12.IN10
present[0] => Mux13.IN10
present[0] => Mux14.IN10
present[0] => Mux15.IN18
present[0] => Mux16.IN18
present[0] => Mux17.IN18
present[0] => Mux18.IN18
present[0] => Mux19.IN18
present[0] => Mux20.IN18
present[0] => Mux21.IN18
present[0] => Mux22.IN18
present[0] => Mux23.IN18
present[0] => Mux24.IN18
present[0] => Mux25.IN18
present[0] => Mux26.IN18
present[0] => Mux27.IN18
present[0] => Mux28.IN18
present[1] => Decoder0.IN3
present[1] => Mux0.IN9
present[1] => Mux1.IN9
present[1] => Mux2.IN9
present[1] => Mux3.IN9
present[1] => Mux4.IN9
present[1] => Mux5.IN9
present[1] => Mux6.IN9
present[1] => Mux7.IN9
present[1] => Mux8.IN9
present[1] => Mux9.IN9
present[1] => Mux10.IN9
present[1] => Mux11.IN9
present[1] => Mux12.IN9
present[1] => Mux13.IN9
present[1] => Mux14.IN9
present[1] => Mux15.IN17
present[1] => Mux16.IN17
present[1] => Mux17.IN17
present[1] => Mux18.IN17
present[1] => Mux19.IN17
present[1] => Mux20.IN17
present[1] => Mux21.IN17
present[1] => Mux22.IN17
present[1] => Mux23.IN17
present[1] => Mux24.IN17
present[1] => Mux25.IN17
present[1] => Mux26.IN17
present[1] => Mux27.IN17
present[1] => Mux28.IN17
present[2] => Decoder0.IN2
present[2] => Mux0.IN8
present[2] => Mux1.IN8
present[2] => Mux2.IN8
present[2] => Mux3.IN8
present[2] => Mux4.IN8
present[2] => Mux5.IN8
present[2] => Mux6.IN8
present[2] => Mux7.IN8
present[2] => Mux8.IN8
present[2] => Mux9.IN8
present[2] => Mux10.IN8
present[2] => Mux11.IN8
present[2] => Mux12.IN8
present[2] => Mux13.IN8
present[2] => Mux14.IN8
present[2] => Mux15.IN16
present[2] => Mux16.IN16
present[2] => Mux17.IN16
present[2] => Mux18.IN16
present[2] => Mux19.IN16
present[2] => Mux20.IN16
present[2] => Mux21.IN16
present[2] => Mux22.IN16
present[2] => Mux23.IN16
present[2] => Mux24.IN16
present[2] => Mux25.IN16
present[2] => Mux26.IN16
present[2] => Mux27.IN16
present[2] => Mux28.IN16
present[3] => Decoder0.IN1
present[3] => Mux0.IN7
present[3] => Mux1.IN7
present[3] => Mux2.IN7
present[3] => Mux3.IN7
present[3] => Mux4.IN7
present[3] => Mux5.IN7
present[3] => Mux6.IN7
present[3] => Mux7.IN7
present[3] => Mux8.IN7
present[3] => Mux9.IN7
present[3] => Mux10.IN7
present[3] => Mux11.IN7
present[3] => Mux12.IN7
present[3] => Mux13.IN7
present[3] => Mux14.IN7
present[3] => Mux15.IN15
present[3] => Mux16.IN15
present[3] => Mux17.IN15
present[3] => Mux18.IN15
present[3] => Mux19.IN15
present[3] => Mux20.IN15
present[3] => Mux21.IN15
present[3] => Mux22.IN15
present[3] => Mux23.IN15
present[3] => Mux24.IN15
present[3] => Mux25.IN15
present[3] => Mux26.IN15
present[3] => Mux27.IN15
present[3] => Mux28.IN15
present[4] => Decoder0.IN0
present[4] => Mux0.IN6
present[4] => Mux1.IN6
present[4] => Mux2.IN6
present[4] => Mux3.IN6
present[4] => Mux4.IN6
present[4] => Mux5.IN6
present[4] => Mux6.IN6
present[4] => Mux7.IN6
present[4] => Mux8.IN6
present[4] => Mux9.IN6
present[4] => Mux10.IN6
present[4] => Mux11.IN6
present[4] => Mux12.IN6
present[4] => Mux13.IN6
present[4] => Mux14.IN6
present[4] => Mux15.IN14
present[4] => Mux16.IN14
present[4] => Mux17.IN14
present[4] => Mux18.IN14
present[4] => Mux19.IN14
present[4] => Mux20.IN14
present[4] => Mux21.IN14
present[4] => Mux22.IN14
present[4] => Mux23.IN14
present[4] => Mux24.IN14
present[4] => Mux25.IN14
present[4] => Mux26.IN14
present[4] => Mux27.IN14
present[4] => Mux28.IN14
reset => ~NO_FANOUT~
clock => colourOut2[0].CLK
clock => colourOut2[1].CLK
clock => colourOut2[2].CLK
clock => colourOut1[0].CLK
clock => colourOut1[1].CLK
clock => colourOut1[2].CLK
clock => winner2.CLK
clock => winner1.CLK
clock => colWrite~reg0.CLK
clock => colAddress[0]~reg0.CLK
clock => colAddress[1]~reg0.CLK
clock => colAddress[2]~reg0.CLK
clock => colAddress[3]~reg0.CLK
clock => colAddress[4]~reg0.CLK
clock => colAddress[5]~reg0.CLK
clock => colAddress[6]~reg0.CLK
clock => colAddress[7]~reg0.CLK
clock => colAddress[8]~reg0.CLK
clock => colAddress[9]~reg0.CLK
clock => colAddress[10]~reg0.CLK
clock => colAddress[11]~reg0.CLK
clock => colAddress[12]~reg0.CLK
clock => colAddress[13]~reg0.CLK
clock => colourOut[0]~reg0.CLK
clock => colourOut[1]~reg0.CLK
clock => colourOut[2]~reg0.CLK
clock => yOut[0]~reg0.CLK
clock => yOut[1]~reg0.CLK
clock => yOut[2]~reg0.CLK
clock => yOut[3]~reg0.CLK
clock => yOut[4]~reg0.CLK
clock => yOut[5]~reg0.CLK
clock => yOut[6]~reg0.CLK
clock => xOut[0]~reg0.CLK
clock => xOut[1]~reg0.CLK
clock => xOut[2]~reg0.CLK
clock => xOut[3]~reg0.CLK
clock => xOut[4]~reg0.CLK
clock => xOut[5]~reg0.CLK
clock => xOut[6]~reg0.CLK
clock => xOut[7]~reg0.CLK
clock => writeEn1~reg0.CLK
clock => yOut2[0].CLK
clock => yOut2[1].CLK
clock => yOut2[2].CLK
clock => yOut2[3].CLK
clock => yOut2[4].CLK
clock => yOut2[5].CLK
clock => yOut2[6].CLK
clock => xOut2[0].CLK
clock => xOut2[1].CLK
clock => xOut2[2].CLK
clock => xOut2[3].CLK
clock => xOut2[4].CLK
clock => xOut2[5].CLK
clock => xOut2[6].CLK
clock => xOut2[7].CLK
clock => yOut1[0].CLK
clock => yOut1[1].CLK
clock => yOut1[2].CLK
clock => yOut1[3].CLK
clock => yOut1[4].CLK
clock => yOut1[5].CLK
clock => yOut1[6].CLK
clock => xOut1[0].CLK
clock => xOut1[1].CLK
clock => xOut1[2].CLK
clock => xOut1[3].CLK
clock => xOut1[4].CLK
clock => xOut1[5].CLK
clock => xOut1[6].CLK
clock => xOut1[7].CLK
clock => printWinner~reg0.CLK
clock => clearObjects~reg0.CLK
writeEn1 <= writeEn1~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[0] <= xOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[1] <= xOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[2] <= xOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[3] <= xOut[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[4] <= xOut[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[5] <= xOut[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[6] <= xOut[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[7] <= xOut[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[0] <= yOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[1] <= yOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[2] <= yOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[3] <= yOut[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[4] <= yOut[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[5] <= yOut[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[6] <= yOut[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colourOut[0] <= colourOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colourOut[1] <= colourOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colourOut[2] <= colourOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colAddress[0] <= colAddress[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colAddress[1] <= colAddress[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colAddress[2] <= colAddress[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colAddress[3] <= colAddress[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colAddress[4] <= colAddress[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colAddress[5] <= colAddress[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colAddress[6] <= colAddress[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colAddress[7] <= colAddress[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colAddress[8] <= colAddress[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colAddress[9] <= colAddress[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colAddress[10] <= colAddress[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colAddress[11] <= colAddress[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colAddress[12] <= colAddress[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colAddress[13] <= colAddress[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
winner[0] <= winner1.DB_MAX_OUTPUT_PORT_TYPE
winner[1] <= winner2.DB_MAX_OUTPUT_PORT_TYPE
colStored => winner1.OUTPUTSELECT
colStored => winner2.OUTPUTSELECT
colStored => Selector36.IN6
colStored => Selector35.IN6
colWrite <= colWrite~reg0.DB_MAX_OUTPUT_PORT_TYPE
clearObjects <= clearObjects~reg0.DB_MAX_OUTPUT_PORT_TYPE
printWinner <= printWinner~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tron|delayCounter1:d1
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
clock => count[3].CLK
clock => count[4].CLK
clock => count[5].CLK
clock => count[6].CLK
clock => count[7].CLK
clock => count[8].CLK
clock => count[9].CLK
clock => count[10].CLK
clock => count[11].CLK
clock => count[12].CLK
clock => count[13].CLK
clock => count[14].CLK
clock => count[15].CLK
clock => count[16].CLK
clock => count[17].CLK
clock => count[18].CLK
clock => count[19].CLK
clock => count[20].CLK
clock => count[21].CLK
clock => count[22].CLK
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
Enable <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|tron|delayCounter2:d2
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
clock => count[3].CLK
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
Enable <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|tron|delayCounter3:d3
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
clock => count[3].CLK
clock => count[4].CLK
clock => count[5].CLK
clock => count[6].CLK
clock => count[7].CLK
clock => count[8].CLK
clock => count[9].CLK
clock => count[10].CLK
clock => count[11].CLK
clock => count[12].CLK
clock => count[13].CLK
clock => count[14].CLK
clock => count[15].CLK
clock => count[16].CLK
clock => count[17].CLK
clock => count[18].CLK
clock => count[19].CLK
clock => count[20].CLK
clock => count[21].CLK
clock => count[22].CLK
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
Enable <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|tron|resetCounter1:d4
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
clock => count[3].CLK
clock => count[4].CLK
clock => count[5].CLK
clock => count[6].CLK
clock => count[7].CLK
clock => count[8].CLK
clock => count[9].CLK
clock => count[10].CLK
clock => count[11].CLK
clock => count[12].CLK
clock => count[13].CLK
clock => count[14].CLK
clock => count[15].CLK
clock => count[16].CLK
clock => count[17].CLK
clock => count[18].CLK
clock => count[19].CLK
clock => count[20].CLK
clock => count[21].CLK
clock => count[22].CLK
clock => count[23].CLK
clock => count[24].CLK
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
Enable <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|tron|collision:col1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
address[12] => address[12].IN1
address[13] => address[13].IN1
clock => clock.IN1
data[0] => data[0].IN1
wren => wren.IN1
q[0] <= altsyncram:altsyncram_component.q_a


|tron|collision:col1|altsyncram:altsyncram_component
wren_a => altsyncram_evo1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_evo1:auto_generated.data_a[0]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_evo1:auto_generated.address_a[0]
address_a[1] => altsyncram_evo1:auto_generated.address_a[1]
address_a[2] => altsyncram_evo1:auto_generated.address_a[2]
address_a[3] => altsyncram_evo1:auto_generated.address_a[3]
address_a[4] => altsyncram_evo1:auto_generated.address_a[4]
address_a[5] => altsyncram_evo1:auto_generated.address_a[5]
address_a[6] => altsyncram_evo1:auto_generated.address_a[6]
address_a[7] => altsyncram_evo1:auto_generated.address_a[7]
address_a[8] => altsyncram_evo1:auto_generated.address_a[8]
address_a[9] => altsyncram_evo1:auto_generated.address_a[9]
address_a[10] => altsyncram_evo1:auto_generated.address_a[10]
address_a[11] => altsyncram_evo1:auto_generated.address_a[11]
address_a[12] => altsyncram_evo1:auto_generated.address_a[12]
address_a[13] => altsyncram_evo1:auto_generated.address_a[13]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_evo1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_evo1:auto_generated.q_a[0]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|tron|collision:col1|altsyncram:altsyncram_component|altsyncram_evo1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[13] => address_reg_a[0].DATAIN
address_a[13] => decode_5la:decode3.data[0]
address_a[13] => decode_u0a:rden_decode.data[0]
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => address_reg_a[0].CLK
data_a[0] => ram_block1a0.PORTADATAIN
data_a[0] => ram_block1a1.PORTADATAIN
q_a[0] <= mux_efb:mux2.result[0]
wren_a => decode_5la:decode3.enable
wren_a => ram_block1a0.IN0


|tron|collision:col1|altsyncram:altsyncram_component|altsyncram_evo1:auto_generated|decode_5la:decode3
data[0] => eq_node[1].IN0
data[0] => eq_node[0].IN0
enable => eq_node[1].IN1
enable => eq_node[0].IN1
eq[0] <= eq_node[0].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= eq_node[1].DB_MAX_OUTPUT_PORT_TYPE


|tron|collision:col1|altsyncram:altsyncram_component|altsyncram_evo1:auto_generated|decode_u0a:rden_decode
data[0] => eq_node[1].IN0
data[0] => eq_node[0].IN0
eq[0] <= eq_node[0].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= eq_node[1].DB_MAX_OUTPUT_PORT_TYPE


|tron|collision:col1|altsyncram:altsyncram_component|altsyncram_evo1:auto_generated|mux_efb:mux2
data[0] => l1_w0_n0_mux_dataout.IN1
data[1] => l1_w0_n0_mux_dataout.IN1
result[0] <= l1_w0_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => l1_w0_n0_mux_dataout.IN0
sel[0] => _.IN0


|tron|collisionBackup:col2
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
address[12] => address[12].IN1
address[13] => address[13].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a


|tron|collisionBackup:col2|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_tph1:auto_generated.address_a[0]
address_a[1] => altsyncram_tph1:auto_generated.address_a[1]
address_a[2] => altsyncram_tph1:auto_generated.address_a[2]
address_a[3] => altsyncram_tph1:auto_generated.address_a[3]
address_a[4] => altsyncram_tph1:auto_generated.address_a[4]
address_a[5] => altsyncram_tph1:auto_generated.address_a[5]
address_a[6] => altsyncram_tph1:auto_generated.address_a[6]
address_a[7] => altsyncram_tph1:auto_generated.address_a[7]
address_a[8] => altsyncram_tph1:auto_generated.address_a[8]
address_a[9] => altsyncram_tph1:auto_generated.address_a[9]
address_a[10] => altsyncram_tph1:auto_generated.address_a[10]
address_a[11] => altsyncram_tph1:auto_generated.address_a[11]
address_a[12] => altsyncram_tph1:auto_generated.address_a[12]
address_a[13] => altsyncram_tph1:auto_generated.address_a[13]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_tph1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_tph1:auto_generated.q_a[0]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|tron|collisionBackup:col2|altsyncram:altsyncram_component|altsyncram_tph1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[13] => address_reg_a[0].DATAIN
address_a[13] => decode_u0a:rden_decode.data[0]
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => address_reg_a[0].CLK
q_a[0] <= mux_efb:mux2.result[0]


|tron|collisionBackup:col2|altsyncram:altsyncram_component|altsyncram_tph1:auto_generated|decode_u0a:rden_decode
data[0] => eq_node[1].IN0
data[0] => eq_node[0].IN0
eq[0] <= eq_node[0].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= eq_node[1].DB_MAX_OUTPUT_PORT_TYPE


|tron|collisionBackup:col2|altsyncram:altsyncram_component|altsyncram_tph1:auto_generated|mux_efb:mux2
data[0] => l1_w0_n0_mux_dataout.IN1
data[1] => l1_w0_n0_mux_dataout.IN1
result[0] <= l1_w0_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => l1_w0_n0_mux_dataout.IN0
sel[0] => _.IN0


|tron|drawWinner:draw1
clock => colourOut[0]~reg0.CLK
clock => colourOut[1]~reg0.CLK
clock => colourOut[2]~reg0.CLK
clock => yOut[0]~reg0.CLK
clock => yOut[1]~reg0.CLK
clock => yOut[2]~reg0.CLK
clock => yOut[3]~reg0.CLK
clock => yOut[4]~reg0.CLK
clock => yOut[5]~reg0.CLK
clock => yOut[6]~reg0.CLK
clock => xOut[0]~reg0.CLK
clock => xOut[1]~reg0.CLK
clock => xOut[2]~reg0.CLK
clock => xOut[3]~reg0.CLK
clock => xOut[4]~reg0.CLK
clock => xOut[5]~reg0.CLK
clock => xOut[6]~reg0.CLK
clock => xOut[7]~reg0.CLK
clock => addressOut[0]~reg0.CLK
clock => addressOut[1]~reg0.CLK
clock => addressOut[2]~reg0.CLK
clock => addressOut[3]~reg0.CLK
clock => addressOut[4]~reg0.CLK
clock => addressOut[5]~reg0.CLK
clock => addressOut[6]~reg0.CLK
clock => addressOut[7]~reg0.CLK
clock => addressOut[8]~reg0.CLK
clock => addressOut[9]~reg0.CLK
xOut[0] <= xOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[1] <= xOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[2] <= xOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[3] <= xOut[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[4] <= xOut[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[5] <= xOut[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[6] <= xOut[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[7] <= xOut[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[0] <= yOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[1] <= yOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[2] <= yOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[3] <= yOut[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[4] <= yOut[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[5] <= yOut[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[6] <= yOut[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colourOut[0] <= colourOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colourOut[1] <= colourOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colourOut[2] <= colourOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
writeEn <= <VCC>
addressOut[0] <= addressOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[1] <= addressOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[2] <= addressOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[3] <= addressOut[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[4] <= addressOut[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[5] <= addressOut[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[6] <= addressOut[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[7] <= addressOut[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[8] <= addressOut[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[9] <= addressOut[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
storedColour1[0] => colourOut.DATAB
storedColour1[1] => colourOut.DATAB
storedColour1[2] => colourOut.DATAB
storedColour2[0] => colourOut.DATAB
storedColour2[1] => colourOut.DATAB
storedColour2[2] => colourOut.DATAB
winner[0] => Equal0.IN1
winner[0] => Equal1.IN0
winner[1] => Equal0.IN0
winner[1] => Equal1.IN1


|tron|p1:player1win
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a


|tron|p1:player1win|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_guf1:auto_generated.address_a[0]
address_a[1] => altsyncram_guf1:auto_generated.address_a[1]
address_a[2] => altsyncram_guf1:auto_generated.address_a[2]
address_a[3] => altsyncram_guf1:auto_generated.address_a[3]
address_a[4] => altsyncram_guf1:auto_generated.address_a[4]
address_a[5] => altsyncram_guf1:auto_generated.address_a[5]
address_a[6] => altsyncram_guf1:auto_generated.address_a[6]
address_a[7] => altsyncram_guf1:auto_generated.address_a[7]
address_a[8] => altsyncram_guf1:auto_generated.address_a[8]
address_a[9] => altsyncram_guf1:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_guf1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_guf1:auto_generated.q_a[0]
q_a[1] <= altsyncram_guf1:auto_generated.q_a[1]
q_a[2] <= altsyncram_guf1:auto_generated.q_a[2]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|tron|p1:player1win|altsyncram:altsyncram_component|altsyncram_guf1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT


|tron|p2:player2win
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a


|tron|p2:player2win|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_iuf1:auto_generated.address_a[0]
address_a[1] => altsyncram_iuf1:auto_generated.address_a[1]
address_a[2] => altsyncram_iuf1:auto_generated.address_a[2]
address_a[3] => altsyncram_iuf1:auto_generated.address_a[3]
address_a[4] => altsyncram_iuf1:auto_generated.address_a[4]
address_a[5] => altsyncram_iuf1:auto_generated.address_a[5]
address_a[6] => altsyncram_iuf1:auto_generated.address_a[6]
address_a[7] => altsyncram_iuf1:auto_generated.address_a[7]
address_a[8] => altsyncram_iuf1:auto_generated.address_a[8]
address_a[9] => altsyncram_iuf1:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_iuf1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_iuf1:auto_generated.q_a[0]
q_a[1] <= altsyncram_iuf1:auto_generated.q_a[1]
q_a[2] <= altsyncram_iuf1:auto_generated.q_a[2]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|tron|p2:player2win|altsyncram:altsyncram_component|altsyncram_iuf1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT


|tron|clearField:clear1
clock => colourOut[0]~reg0.CLK
clock => colourOut[1]~reg0.CLK
clock => colourOut[2]~reg0.CLK
clock => yOut[0]~reg0.CLK
clock => yOut[1]~reg0.CLK
clock => yOut[2]~reg0.CLK
clock => yOut[3]~reg0.CLK
clock => yOut[4]~reg0.CLK
clock => yOut[5]~reg0.CLK
clock => yOut[6]~reg0.CLK
clock => xOut[0]~reg0.CLK
clock => xOut[1]~reg0.CLK
clock => xOut[2]~reg0.CLK
clock => xOut[3]~reg0.CLK
clock => xOut[4]~reg0.CLK
clock => xOut[5]~reg0.CLK
clock => xOut[6]~reg0.CLK
clock => xOut[7]~reg0.CLK
clock => addressOut[0]~reg0.CLK
clock => addressOut[1]~reg0.CLK
clock => addressOut[2]~reg0.CLK
clock => addressOut[3]~reg0.CLK
clock => addressOut[4]~reg0.CLK
clock => addressOut[5]~reg0.CLK
clock => addressOut[6]~reg0.CLK
clock => addressOut[7]~reg0.CLK
clock => addressOut[8]~reg0.CLK
clock => addressOut[9]~reg0.CLK
clock => addressOut[10]~reg0.CLK
clock => addressOut[11]~reg0.CLK
clock => addressOut[12]~reg0.CLK
clock => addressOut[13]~reg0.CLK
xOut[0] <= xOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[1] <= xOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[2] <= xOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[3] <= xOut[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[4] <= xOut[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[5] <= xOut[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[6] <= xOut[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xOut[7] <= xOut[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[0] <= yOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[1] <= yOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[2] <= yOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[3] <= yOut[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[4] <= yOut[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[5] <= yOut[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yOut[6] <= yOut[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colourOut[0] <= colourOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colourOut[1] <= colourOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colourOut[2] <= colourOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
writeEn <= <VCC>
addressOut[0] <= addressOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[1] <= addressOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[2] <= addressOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[3] <= addressOut[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[4] <= addressOut[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[5] <= addressOut[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[6] <= addressOut[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[7] <= addressOut[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[8] <= addressOut[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[9] <= addressOut[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[10] <= addressOut[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[11] <= addressOut[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[12] <= addressOut[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addressOut[13] <= addressOut[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut <= backupQ.DB_MAX_OUTPUT_PORT_TYPE
writeOut <= <VCC>
backupQ => dataOut.DATAIN


|tron|PS2_Demo:ps2
CLOCK_50 => CLOCK_50.IN1
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => _.IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
PS2_CLK <> PS2_Controller:PS2.PS2_CLK
PS2_DAT <> PS2_Controller:PS2.PS2_DAT
w <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
a <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
s <= Equal2.DB_MAX_OUTPUT_PORT_TYPE
d <= Equal3.DB_MAX_OUTPUT_PORT_TYPE
up <= Equal4.DB_MAX_OUTPUT_PORT_TYPE
down <= Equal5.DB_MAX_OUTPUT_PORT_TYPE
left <= Equal7.DB_MAX_OUTPUT_PORT_TYPE
right <= Equal6.DB_MAX_OUTPUT_PORT_TYPE
enter <= Equal8.DB_MAX_OUTPUT_PORT_TYPE


|tron|PS2_Demo:ps2|PS2_Controller:PS2
CLOCK_50 => CLOCK_50.IN2
reset => reset.IN2
the_command[0] => the_command_w[0].IN1
the_command[1] => the_command_w[1].IN1
the_command[2] => the_command_w[2].IN1
the_command[3] => the_command_w[3].IN1
the_command[4] => the_command_w[4].IN1
the_command[5] => the_command_w[5].IN1
the_command[6] => the_command_w[6].IN1
the_command[7] => the_command_w[7].IN1
send_command => send_command_w.IN1
PS2_CLK <> Altera_UP_PS2_Command_Out:PS2_Command_Out.PS2_CLK
PS2_DAT <> Altera_UP_PS2_Command_Out:PS2_Command_Out.PS2_DAT
command_was_sent <= Altera_UP_PS2_Command_Out:PS2_Command_Out.command_was_sent
error_communication_timed_out <= Altera_UP_PS2_Command_Out:PS2_Command_Out.error_communication_timed_out
received_data[0] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[1] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[2] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[3] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[4] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[5] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[6] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[7] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data_en <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data_en


|tron|PS2_Demo:ps2|PS2_Controller:PS2|Altera_UP_PS2_Data_In:PS2_Data_In
clk => received_data_en~reg0.CLK
clk => received_data[0]~reg0.CLK
clk => received_data[1]~reg0.CLK
clk => received_data[2]~reg0.CLK
clk => received_data[3]~reg0.CLK
clk => received_data[4]~reg0.CLK
clk => received_data[5]~reg0.CLK
clk => received_data[6]~reg0.CLK
clk => received_data[7]~reg0.CLK
clk => data_shift_reg[0].CLK
clk => data_shift_reg[1].CLK
clk => data_shift_reg[2].CLK
clk => data_shift_reg[3].CLK
clk => data_shift_reg[4].CLK
clk => data_shift_reg[5].CLK
clk => data_shift_reg[6].CLK
clk => data_shift_reg[7].CLK
clk => data_count[0].CLK
clk => data_count[1].CLK
clk => data_count[2].CLK
clk => data_count[3].CLK
clk => s_ps2_receiver~1.DATAIN
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data_en.OUTPUTSELECT
wait_for_incoming_data => always1.IN1
wait_for_incoming_data => ns_ps2_receiver.DATAA
wait_for_incoming_data => ns_ps2_receiver.DATAA
start_receiving_data => always1.IN1
ps2_clk_posedge => always1.IN0
ps2_clk_posedge => always1.IN1
ps2_clk_posedge => always2.IN0
ps2_clk_posedge => always5.IN0
ps2_clk_posedge => Selector4.IN3
ps2_clk_posedge => Selector0.IN4
ps2_clk_posedge => Selector4.IN1
ps2_clk_posedge => Selector3.IN2
ps2_clk_negedge => ~NO_FANOUT~
ps2_data => data_shift_reg.DATAB
ps2_data => always1.IN1
received_data[0] <= received_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[1] <= received_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[2] <= received_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[3] <= received_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[4] <= received_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[5] <= received_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[6] <= received_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[7] <= received_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data_en <= received_data_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tron|PS2_Demo:ps2|PS2_Controller:PS2|Altera_UP_PS2_Command_Out:PS2_Command_Out
clk => error_communication_timed_out~reg0.CLK
clk => command_was_sent~reg0.CLK
clk => cur_bit[0].CLK
clk => cur_bit[1].CLK
clk => cur_bit[2].CLK
clk => cur_bit[3].CLK
clk => transfer_counter[1].CLK
clk => transfer_counter[2].CLK
clk => transfer_counter[3].CLK
clk => transfer_counter[4].CLK
clk => transfer_counter[5].CLK
clk => transfer_counter[6].CLK
clk => transfer_counter[7].CLK
clk => transfer_counter[8].CLK
clk => transfer_counter[9].CLK
clk => transfer_counter[10].CLK
clk => transfer_counter[11].CLK
clk => transfer_counter[12].CLK
clk => transfer_counter[13].CLK
clk => transfer_counter[14].CLK
clk => transfer_counter[15].CLK
clk => transfer_counter[16].CLK
clk => transfer_counter[17].CLK
clk => waiting_counter[1].CLK
clk => waiting_counter[2].CLK
clk => waiting_counter[3].CLK
clk => waiting_counter[4].CLK
clk => waiting_counter[5].CLK
clk => waiting_counter[6].CLK
clk => waiting_counter[7].CLK
clk => waiting_counter[8].CLK
clk => waiting_counter[9].CLK
clk => waiting_counter[10].CLK
clk => waiting_counter[11].CLK
clk => waiting_counter[12].CLK
clk => waiting_counter[13].CLK
clk => waiting_counter[14].CLK
clk => waiting_counter[15].CLK
clk => waiting_counter[16].CLK
clk => waiting_counter[17].CLK
clk => waiting_counter[18].CLK
clk => waiting_counter[19].CLK
clk => waiting_counter[20].CLK
clk => command_initiate_counter[1].CLK
clk => command_initiate_counter[2].CLK
clk => command_initiate_counter[3].CLK
clk => command_initiate_counter[4].CLK
clk => command_initiate_counter[5].CLK
clk => command_initiate_counter[6].CLK
clk => command_initiate_counter[7].CLK
clk => command_initiate_counter[8].CLK
clk => command_initiate_counter[9].CLK
clk => command_initiate_counter[10].CLK
clk => command_initiate_counter[11].CLK
clk => command_initiate_counter[12].CLK
clk => command_initiate_counter[13].CLK
clk => ps2_command[0].CLK
clk => ps2_command[1].CLK
clk => ps2_command[2].CLK
clk => ps2_command[3].CLK
clk => ps2_command[4].CLK
clk => ps2_command[5].CLK
clk => ps2_command[6].CLK
clk => ps2_command[7].CLK
clk => ps2_command[8].CLK
clk => s_ps2_transmitter~1.DATAIN
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => command_was_sent.OUTPUTSELECT
reset => error_communication_timed_out.OUTPUTSELECT
the_command[0] => WideXor0.IN0
the_command[0] => ps2_command.DATAB
the_command[1] => WideXor0.IN1
the_command[1] => ps2_command.DATAB
the_command[2] => WideXor0.IN2
the_command[2] => ps2_command.DATAB
the_command[3] => WideXor0.IN3
the_command[3] => ps2_command.DATAB
the_command[4] => WideXor0.IN4
the_command[4] => ps2_command.DATAB
the_command[5] => WideXor0.IN5
the_command[5] => ps2_command.DATAB
the_command[6] => WideXor0.IN6
the_command[6] => ps2_command.DATAB
the_command[7] => WideXor0.IN7
the_command[7] => ps2_command.DATAB
send_command => Selector1.IN3
send_command => Selector6.IN2
send_command => Selector7.IN6
send_command => command_was_sent.OUTPUTSELECT
send_command => error_communication_timed_out.OUTPUTSELECT
send_command => Selector0.IN1
ps2_clk_posedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_posedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_posedge => Selector6.IN3
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => always1.IN1
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => always6.IN0
ps2_clk_negedge => Selector3.IN3
ps2_clk_negedge => Selector5.IN3
PS2_CLK <> PS2_CLK
PS2_DAT <> PS2_DAT
command_was_sent <= command_was_sent~reg0.DB_MAX_OUTPUT_PORT_TYPE
error_communication_timed_out <= error_communication_timed_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tron|scoreCounter:score12
clock => ~NO_FANOUT~
winner2 => p2score[0]~reg0.CLK
winner2 => p2score[1]~reg0.CLK
winner2 => p2score[2]~reg0.CLK
winner2 => p2score[3]~reg0.CLK
winner2 => p2score[4]~reg0.CLK
winner2 => p2score[5]~reg0.CLK
winner2 => p2score[6]~reg0.CLK
winner2 => p2score[7]~reg0.CLK
winner1 => p1score[0]$latch.LATCH_ENABLE
winner1 => p1score[7]$latch.LATCH_ENABLE
winner1 => p1score[6]$latch.LATCH_ENABLE
winner1 => p1score[5]$latch.LATCH_ENABLE
winner1 => p1score[4]$latch.LATCH_ENABLE
winner1 => p1score[3]$latch.LATCH_ENABLE
winner1 => p1score[2]$latch.LATCH_ENABLE
winner1 => p1score[1]$latch.LATCH_ENABLE
winner1 => p2score[0]~reg0.ENA
winner1 => p2score[7]~reg0.ENA
winner1 => p2score[6]~reg0.ENA
winner1 => p2score[5]~reg0.ENA
winner1 => p2score[4]~reg0.ENA
winner1 => p2score[3]~reg0.ENA
winner1 => p2score[2]~reg0.ENA
winner1 => p2score[1]~reg0.ENA
p1score[0] <= p1score[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
p1score[1] <= p1score[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
p1score[2] <= p1score[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
p1score[3] <= p1score[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
p1score[4] <= p1score[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
p1score[5] <= p1score[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
p1score[6] <= p1score[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
p1score[7] <= p1score[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
p2score[0] <= p2score[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p2score[1] <= p2score[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p2score[2] <= p2score[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p2score[3] <= p2score[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p2score[4] <= p2score[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p2score[5] <= p2score[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p2score[6] <= p2score[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p2score[7] <= p2score[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
resetScore => p2score[0]~reg0.ACLR
resetScore => p2score[1]~reg0.ACLR
resetScore => p2score[2]~reg0.ACLR
resetScore => p2score[3]~reg0.ACLR
resetScore => p2score[4]~reg0.ACLR
resetScore => p2score[5]~reg0.ACLR
resetScore => p2score[6]~reg0.ACLR
resetScore => p2score[7]~reg0.ACLR
resetScore => p1score[0]$latch.ACLR
resetScore => p1score[7]$latch.ACLR
resetScore => p1score[6]$latch.ACLR
resetScore => p1score[5]$latch.ACLR
resetScore => p1score[4]$latch.ACLR
resetScore => p1score[3]$latch.ACLR
resetScore => p1score[2]$latch.ACLR
resetScore => p1score[1]$latch.ACLR


|tron|hexDecoder:h1
switch[0] => Decoder0.IN3
switch[1] => Decoder0.IN2
switch[2] => Decoder0.IN1
switch[3] => Decoder0.IN0
HEX[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|tron|hexDecoder:h0
switch[0] => Decoder0.IN3
switch[1] => Decoder0.IN2
switch[2] => Decoder0.IN1
switch[3] => Decoder0.IN0
HEX[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|tron|hexDecoder:h5
switch[0] => Decoder0.IN3
switch[1] => Decoder0.IN2
switch[2] => Decoder0.IN1
switch[3] => Decoder0.IN0
HEX[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|tron|hexDecoder:h4
switch[0] => Decoder0.IN3
switch[1] => Decoder0.IN2
switch[2] => Decoder0.IN1
switch[3] => Decoder0.IN0
HEX[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


